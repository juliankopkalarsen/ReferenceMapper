void VMLine.Base.AlarmEventArgs<TAlarm>.AlarmEventArgs(TAlarm, bool)
void VMLine.Base.BootstrapperException.BootstrapperException()
void VMLine.Base.BootstrapperException.BootstrapperException(string)
void VMLine.Base.BootstrapperException.BootstrapperException(string, System.Exception)
void VMLine.Base.BootstrapperException.BootstrapperException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
T VMLine.Base.ContainerExtensions.ResolveOrDefault<T>(Microsoft.Practices.Unity.IUnityContainer)
void VMLine.Base.ContainerExtensions.TestRegistration<T>(Microsoft.Practices.Unity.IUnityContainer, System.Action<System.Exception>)
void VMLine.Base.ContainerExtensions.RegisterType<T>(Microsoft.Practices.Unity.IUnityContainer, System.Type, Microsoft.Practices.Unity.LifetimeManager)
void VMLine.Base.ContainerExtensions.RegisterType<T>(Microsoft.Practices.Unity.IUnityContainer, string, Microsoft.Practices.Unity.LifetimeManager)
void VMLine.Base.ContainerExtensions.RegisterType(Microsoft.Practices.Unity.IUnityContainer, string, Microsoft.Practices.Unity.LifetimeManager)
string VMLine.Base.ContainerExtensions.GetContainerConfiguration(Microsoft.Practices.Unity.IUnityContainer)
string VMLine.Base.ContainerExtensions.GetMappingAsString(Microsoft.Practices.Unity.ContainerRegistration)
UserGroup VMLine.Base.DummyAuthentication.GetUserGroup(string)
bool VMLine.Base.DummyAuthentication.VerifyUser(string, string)
void VMLine.Base.UserAuthenticationWrapper.UserAuthenticationWrapper(UserAuthentication)
void VMLine.Base.UserAuthenticationWrapper._auth_UserChanged(object, System.EventArgs)
bool VMLine.Base.UserAuthenticationWrapper.IsSuperUser()
void VMLine.Base.UserAuthenticationWrapper.Login(string, string)
int VMLine.Base.UserAuthenticationWrapper.GetUserLevel()
string VMLine.Base.UserAuthenticationWrapper.GetUserName()
void VMLine.Base.IAlarmManager<TAlarm>.ResetAllAlarms()
bool VMLine.Base.IAlarmManager<TAlarm>.HasAnyAlarms()
System.Collections.Generic.List<TAlarm> VMLine.Base.IAlarmManager<TAlarm>.GetAllRaisedAlarms()
void VMLine.Base.IAlarmManager<TAlarm>.RaiseAlarm(TAlarm)
bool VMLine.Base.IAuthenticationManager.IsSuperUser()
void VMLine.Base.IAuthenticationManager.Login(string, string)
int VMLine.Base.IAuthenticationManager.GetUserLevel()
string VMLine.Base.IAuthenticationManager.GetUserName()
void VMLine.Base.NavigationButtonViewModel.NavigationButtonViewModel(int)
void VMLine.Base.ScreenManager.SelectView(System.Type)
void VMLine.Domain.FileLogger.FileLogger(VMLine.Domain.LogSettings, UserAuthentication)
void VMLine.Domain.FileLogger.Dispose()
void VMLine.Domain.LogSettings.LogSettings()
VMLine.Domain.Result VMLine.ImageAnalysis.IImageAnalyzer.AnalyzeImage(VMImage)
VMLine.Domain.Result VMLine.ImageAnalysis.ImageAnalyzer.AnalyzeImage(VMImage)
VMImage VMLine.Interfaces.ICamera.Grab()
void VMLine.Interfaces.PublishImageEvent.PublishImageEvent(VMImage)
void VMLine.MainController.MainController.MainController(VMLine.Interfaces.ISignalGatewayInitiator, VMLine.ImageAnalysis.IImageAnalyzer, VMLine.Interfaces.IAcquisitionSystem, VMLine.Base.IAlarmManager<VMLine.Domain.VMLineAlarm>)
void VMLine.MainController.MainController.Run()
void VMLine.MainController.MainController.StartProduction()
void VMLine.MainController.MainController.StopProduction()
VMLine.Interfaces.State VMLine.MainController.MainController.GetState()
void VMLine.MainController.MainController.Capture()
void VMLine.MainController.MainController.Calibrate()
void SignalGatewayRouting.MultiInitializor.MultiInitializor(params VMLine.Interfaces.ISignalGatewayInitiator[])
Task<VMLine.Interfaces.ISignalGateway> SignalGatewayRouting.MultiInitializor.Initialize(VMLine.Interfaces.ISignalGatewayListener)
void SignalGatewayRouting.SimpleInitiator.SimpleInitiator(VMLine.Interfaces.ISignalGateway)
Task<VMLine.Interfaces.ISignalGateway> SignalGatewayRouting.SimpleInitiator.Initialize(VMLine.Interfaces.ISignalGatewayListener)
void SignalGatewayRouting.SimpleRouter.SimpleRouter(params VMLine.Interfaces.ISignalGateway[])
void SignalGatewayRouting.SimpleRouter.ResultReady(VMLine.Domain.Result)
void SignalGatewayRouting.SimpleRouter.SystemIsReady()
void SignalGatewayRouting.SimpleRouter.SystemIsNotReady()
void SignalGatewayRouting.SimpleRouter.NewProductionImage(VMLine.Interfaces.PublishImageEvent)
void SignalGatewayRouting.SimpleRouter.NewCaptureImage(VMLine.Interfaces.PublishImageEvent)
void SignalGatewayRouting.SimpleRouter.StateChanged(VMLine.Interfaces.State)
void VMLine.FileAcquisitor.FileAcquisitor.FileAcquisitor(string)
void VMLine.AcquisitionSystem.AcquisitionSystem.AcquisitionSystem(VMLine.AcquisitionSystem.AcquisitionSystemSettings)
void VMLine.AcquisitionSystem.AcquisitionSystem.Calibrate()
VMImage VMLine.AcquisitionSystem.AcquisitionSystem.Capture()
Task VMLine.AcquisitionSystem.AcquisitionSystem.Init()
void VMLine.Drivers.Common.AlarmManager<TAlarm>.AlarmManager(Log)
void VMLine.Drivers.Common.AlarmManager<TAlarm>.SetAlarmState(TAlarm, bool)
void VMLine.Drivers.Common.AlarmManager<TAlarm>.RaiseAlarm(TAlarm)
bool VMLine.Drivers.Common.AlarmManager<TAlarm>.IsAlarmHi(TAlarm)
void VMLine.Drivers.Common.AlarmManager<TAlarm>.ResetAllAlarms()
void VMLine.Drivers.Common.AlarmManager<TAlarm>.ResetAlarm(TAlarm)
bool VMLine.Drivers.Common.AlarmManager<TAlarm>.HasAnyAlarms()
bool VMLine.Drivers.Common.AlarmManager<TAlarm>.IsAlarmResettable(TAlarm)
List<TAlarm> VMLine.Drivers.Common.AlarmManager<TAlarm>.GetAllRaisedAlarms()
object[] VMLine.Drivers.Common.ComponentRegistration.GetDefaultComponentSettings()
void VMLine.Drivers.Common.ComponentRegistration.RegisterComponents(IUnityContainer, VMLine.Drivers.Common.Components)
IConfigurationRepository VMLine.Drivers.Common.SettingsAndConfig.ConfigRepo(List<object>)
IConfigurationRepository VMLine.Drivers.Common.SettingsAndConfig.SettingsRepo(List<object>)
void VMLine.DummyPlc.DummyPlc.ResultReady(VMLine.Domain.Result)
void VMLine.DummyPlc.DummyPlc.SystemIsReady()
void VMLine.DummyPlc.DummyPlc.SystemIsNotReady()
void VMLine.DummyPlc.DummyPlc.NewProductionImage(VMLine.Interfaces.PublishImageEvent)
void VMLine.DummyPlc.DummyPlc.NewCaptureImage(VMLine.Interfaces.PublishImageEvent)
void VMLine.DummyPlc.DummyPlc.StateChanged(VMLine.Interfaces.State)
void VMLine.Events.IEventPublisher.AddEvent(VMLine.Events.VMLineEvent)
string VMLine.Events.VMLineEvent.ToString()
void VMLine.Events.VMLineEventArgs.VMLineEventArgs(VMLine.Events.VMLineEvent)
void VMLine.Events.VMLineEventManager.VMLineEventManager(Log, VMLine.Drivers.Common.AlarmManager<VMLine.Domain.VMLineAlarm>, VMLine.Base.IAuthenticationManager)
void VMLine.Events.VMLineEventManager.OnAlarmChanged(object, VMLine.Base.AlarmEventArgs<VMLine.Domain.VMLineAlarm>)
void VMLine.Events.VMLineEventManager.OnLogExceptionAdded(object, LogMessageEventArgs)
void VMLine.Events.VMLineEventManager.OnLogMessageAdded(object, LogMessageEventArgs)
void VMLine.Events.VMLineEventManager.OnLogWarningAdded(object, LogMessageEventArgs)
void VMLine.Events.VMLineEventManager.Dispose()
void VMLine.GUI.Alarm.AlarmModule.AlarmModule(IUnityContainer, IRegionManager)
void VMLine.GUI.Alarm.AlarmModule.InitializeModule()
void VMLine.GUI.Alarm.AlarmModule.RegisterTypes()
void VMLine.GUI.Alarm.AlarmViewModel.AlarmViewModel(VMLine.Base.IAlarmManager<VMLine.Domain.VMLineAlarm>)
void VMLine.GUI.Alarm.AlarmViewModel.OnResetAlarms()
bool VMLine.GUI.Alarm.AlarmViewModel.CanResetAlarms()
void VMLine.GUI.Alarm.AlarmViewModel.AlarmsChanged(object, VMLine.Base.AlarmEventArgs<VMLine.Domain.VMLineAlarm>)
void VMLine.GUI.Alarm.AlarmViewModel.BlinkAlarmMainText(object, EventArgs)
void VMLine.GUI.Alarm.AlarmPanel.AlarmPanel(VMLine.GUI.Alarm.IAlarmViewModel)
void VMLine.GUI.Alarm.Properties.Strings.Strings()
int VMLine.GUI.Alarm.SolidColorBrushComparer.GetHashCode(SolidColorBrush)
void VMLine.GUI.UserControls.ConsoleViewer.ConsoleViewer()
void VMLine.GUI.UserControls.ConsoleViewer.ScrollToEnd()
void VMLine.GUI.UserControls.ConsoleViewer.Dispose()
void VMLine.GUI.UserControls.ConsoleWriter.ConsoleWriter(System.Windows.Controls.TextBox, System.IO.TextWriter)
void VMLine.GUI.UserControls.ConsoleWriter.Write(char)
void VMLine.GUI.UserControls.ImageViewer.ImageViewer()
void VMLine.GUI.UserControls.ImageViewer.Dispose()
void VMLine.GUI.UserControls.VMLineImageViewerControl.VMLineImageViewerControl()
void VMLine.GUI.UserControls.VMLineImageViewerControl.OnImageChanged(System.EventArgs)
void VMLine.GUI.Camera.CameraModule.CameraModule(IUnityContainer, IRegionManager)
void VMLine.GUI.Camera.CameraViewModel.CameraViewModel(VMLine.GUI.Camera.ICameraProvider)
void VMLine.GUI.Camera.CameraViewModel.TryCalibrate()
bool VMLine.GUI.Camera.CameraViewModel.CanCalibrate()
bool VMLine.GUI.Camera.CameraViewModel.CanCapture()
void VMLine.GUI.Camera.CameraViewModel.TryCapture()
void VMLine.GUI.Camera.CameraViewModel._cameraProvider_NewCameraImage(object, VMLine.Interfaces.PublishImageEvent)
void VMLine.GUI.Camera.CameraView.CameraView(VMLine.GUI.Camera.ICameraViewModel)
void VMLine.GUI.Camera.CameraButton.CameraButton(VMLine.GUI.Camera.ICameraViewModel)
void VMLine.GUI.Camera.Properties.Strings.Strings()
void VMLine.GUI.Configuration.ConfigurationModule.ConfigurationModule(IUnityContainer, IRegionManager)
void VMLine.GUI.Configuration.ConfigurationViewModel.ConfigurationViewModel(IConfigurationRepository)
void VMLine.GUI.Configuration.ConfigurationViewModel.OnSave()
void VMLine.GUI.Configuration.ConfigurationViewModel.OnSettingsChanged()
void VMLine.GUI.Configuration.ConfigurationViewModel.ConfirmNavigationRequest(NavigationContext, Action<bool>)
void VMLine.GUI.Configuration.ConfigurationViewModel.OnNavigatedFrom(NavigationContext)
void VMLine.GUI.Configuration.ConfigurationViewModel.OnNavigatedTo(NavigationContext)
bool VMLine.GUI.Configuration.ConfigurationViewModel.IsNavigationTarget(NavigationContext)
void VMLine.GUI.Configuration.ConfigurationButton.ConfigurationButton(VMLine.GUI.Configuration.IConfigurationViewModel)
void VMLine.GUI.Configuration.ConfigurationView.ConfigurationView(VMLine.GUI.Configuration.IConfigurationViewModel)
void VMLine.GUI.Configuration.Properties.Strings.Strings()
void VMLine.GUI.Login.LoginModule.LoginModule(IUnityContainer, IRegionManager)
void VMLine.GUI.Login.LoginViewModel.LoginViewModel(VMLine.Base.IAuthenticationManager, VMLine.Base.LogoutSettings)
bool VMLine.GUI.Login.LoginViewModel.CanLogOut()
void VMLine.GUI.Login.LoginViewModel.TryLogOut()
bool VMLine.GUI.Login.LoginViewModel.CanLogin()
void VMLine.GUI.Login.LoginViewModel.TryLogIn()
void VMLine.GUI.Login.LoginViewModel.UpdateLoginLogoutState(object, EventArgs)
void VMLine.GUI.Login.LoginButton.LoginButton(VMLine.GUI.Login.ILoginViewModel)
void VMLine.GUI.Login.LoginView.LoginView(VMLine.GUI.Login.ILoginViewModel)
void VMLine.GUI.Login.LoginView.textBoxUser_KeyDown(object, System.Windows.Input.KeyEventArgs)
void VMLine.GUI.Login.LoginView.textBoxPassword_PasswordChanged(object, System.Windows.RoutedEventArgs)
void VMLine.GUI.Login.LoginView.textBoxPassword_KeyDown(object, System.Windows.Input.KeyEventArgs)
void VMLine.GUI.Login.Properties.Strings.Strings()
DataTemplate VMLine.GUI.Log.EventTemplateSelector.SelectTemplate(object, DependencyObject)
void VMLine.GUI.Log.LogModule.LogModule(IUnityContainer, IRegionManager)
void VMLine.GUI.Log.LogViewModel.LogViewModel(VMLine.Events.VMLineEventManager)
void VMLine.GUI.Log.LogViewModel.AddEvent(VMLine.Events.VMLineEvent)
void VMLine.GUI.Log.LogButton.LogButton(VMLine.GUI.Log.ILogViewModel)
void VMLine.GUI.Log.LogView.LogView(VMLine.GUI.Log.ILogViewModel, IUnityContainer)
void VMLine.GUI.Log.LogView.EventViewerListView_Click(object, RoutedEventArgs)
void VMLine.GUI.Log.LogView.OnNavigatedTo(NavigationContext)
bool VMLine.GUI.Log.LogView.IsNavigationTarget(NavigationContext)
void VMLine.GUI.Log.LogView.OnNavigatedFrom(NavigationContext)
void VMLine.GUI.Log.SortEvents.SortEvents(string, ListSortDirection)
int VMLine.GUI.Log.SortEvents.Compare(object, object)
void VMLine.GUI.Log.Properties.Strings.Strings()
void VMLine.GUI.Production.ProductionViewModel.ProductionViewModel(VMLine.GUI.Production.IProductionProvider)
void VMLine.GUI.Production.ProductionViewModel.TryStart()
bool VMLine.GUI.Production.ProductionViewModel.CanStart()
void VMLine.GUI.Production.ProductionViewModel.TryStop()
bool VMLine.GUI.Production.ProductionViewModel.CanStop()
void VMLine.GUI.Production.ProductionViewModel._productionProvider_NewResult(object, VMLine.GUI.Production.NewResultEvent)
void VMLine.GUI.Production.ProductionViewModel._productionProvider_NewProductionImage(object, VMLine.Interfaces.PublishImageEvent)
void VMLine.GUI.Production.ProductionViewModel.~ProductionViewModel()
void VMLine.GUI.Production.ProductionViewModel.Dispose()
void VMLine.GUI.Production.ProductionModule.ProductionModule(IUnityContainer, IRegionManager)
void VMLine.GUI.Production.ProductionView.ProductionView(VMLine.GUI.Production.IProductionViewModel)
void VMLine.GUI.Production.ProductionButton.ProductionButton(VMLine.GUI.Production.IProductionViewModel)
void VMLine.GUI.Production.Properties.Strings.Strings()
void VMLine.GUI.Settings.Properties.Strings.Strings()
void VMLine.GUI.Settings.SettingsModule.SettingsModule(IUnityContainer, IRegionManager)
void VMLine.GUI.Settings.SettingsViewModel.SettingsViewModel(IConfigurationRepository)
void VMLine.GUI.Settings.SettingsViewModel.OnSave()
void VMLine.GUI.Settings.SettingsViewModel.OnSettingsChanged()
void VMLine.GUI.Settings.SettingsViewModel.ConfirmNavigationRequest(NavigationContext, Action<bool>)
void VMLine.GUI.Settings.SettingsViewModel.OnNavigatedFrom(NavigationContext)
void VMLine.GUI.Settings.SettingsViewModel.OnNavigatedTo(NavigationContext)
bool VMLine.GUI.Settings.SettingsViewModel.IsNavigationTarget(NavigationContext)
void VMLine.GUI.Settings.SettingsButton.SettingsButton(VMLine.GUI.Settings.ISettingsViewModel)
void VMLine.GUI.Settings.SettingsView.SettingsView(VMLine.GUI.Settings.ISettingsViewModel)
Task<VMLine.Interfaces.ISignalGateway> VMLine.Gui.Application.GuiSignalgateway.Initialize(VMLine.Interfaces.ISignalGatewayListener)
void VMLine.Gui.Application.GuiSignalgateway.ResultReady(VMLine.Domain.Result)
void VMLine.Gui.Application.GuiSignalgateway.SystemIsReady()
void VMLine.Gui.Application.GuiSignalgateway.SystemIsNotReady()
bool VMLine.Gui.Application.GuiSignalgateway.IsRunning()
void VMLine.Gui.Application.GuiSignalgateway.StartProduction()
void VMLine.Gui.Application.GuiSignalgateway.StopProduction()
void VMLine.Gui.Application.GuiSignalgateway.VMLine.Interfaces.ISignalGateway.NewProductionImage(VMLine.Interfaces.PublishImageEvent)
void VMLine.Gui.Application.GuiSignalgateway.Capture()
bool VMLine.Gui.Application.GuiSignalgateway.IsIdle()
void VMLine.Gui.Application.GuiSignalgateway.Calibrate()
void VMLine.Gui.Application.GuiSignalgateway.NewCaptureImage(VMLine.Interfaces.PublishImageEvent)
void VMLine.Gui.Application.GuiSignalgateway.StateChanged(VMLine.Interfaces.State)
void VMLine.Application.Shell.Shell(VMLine.Application.IShellViewModel)
void VMLine.Application.App.OnStartup(StartupEventArgs)
DependencyObject VMLine.Application.Bootstrapper.CreateShell()
void VMLine.Application.Bootstrapper.InitializeShell()
void VMLine.Application.Bootstrapper.ConfigureContainer()
RegionAdapterMappings VMLine.Application.Bootstrapper.ConfigureRegionAdapterMappings()
void VMLine.Application.Bootstrapper.ConfigureModuleCatalog()
void VMLine.Application.Bootstrapper.AddScreenModule(Type, int)
void VMLine.Application.ShellViewModel.ShellViewModel(IRegionManager)
void VMLine.Application.ShellViewModel.Navigate(object)
void VMLine.Application.ShellViewModel.NavigationCallback(object, NavigationResult)
void VMLine.Gui.Application.Properties.Resources.Resources()
Task<VMLine.Interfaces.ISignalGateway> VMLine.Console.Application.ConsoleSignalGateway.Initialize(VMLine.Interfaces.ISignalGatewayListener)
void VMLine.Console.Application.ConsoleSignalGateway.NewCaptureImage(VMLine.Interfaces.PublishImageEvent)
void VMLine.Console.Application.ConsoleSignalGateway.NewProductionImage(VMLine.Interfaces.PublishImageEvent)
void VMLine.Console.Application.ConsoleSignalGateway.ResultReady(VMLine.Domain.Result)
void VMLine.Console.Application.ConsoleSignalGateway.StateChanged(VMLine.Interfaces.State)
void VMLine.Console.Application.ConsoleSignalGateway.SystemIsNotReady()
void VMLine.Console.Application.ConsoleSignalGateway.SystemIsReady()
void VMLine.Console.Application.Program.Main(string[])
void VMLine.SignalGateway.ModbusGateway.AbstractModbusGateway.AbstractModbusGateway(VMLine.Domain.SignalGatewaySettings)
void VMLine.SignalGateway.ModbusGateway.AbstractModbusGateway.ModbusLoop()
void VMLine.SignalGateway.ModbusGateway.AbstractModbusGateway.Dispose()
void VMLine.SignalGateway.ModbusGateway.ModbusGateway.ModbusGateway(VMLine.Domain.SignalGatewaySettings)
Task<VMLine.Interfaces.ISignalGateway> VMLine.SignalGateway.ModbusGateway.ModbusGateway.Initialize(VMLine.Interfaces.ISignalGatewayListener)
void VMLine.SignalGateway.ModbusGateway.ModbusGateway.SetupRoutes(out Dictionary<ushort, Action<bool>>, out Dictionary<ushort, Action<ushort>>)
void VMLine.SignalGateway.ModbusGateway.ModbusGateway.RecipeIdChanged(ushort)
void VMLine.SignalGateway.ModbusGateway.ModbusGateway.ResultReady(VMLine.Domain.Result)
void VMLine.SignalGateway.ModbusGateway.ModbusGateway.StateChanged(VMLine.Interfaces.State)
void VMLine.SignalGateway.ModbusGateway.ModbusGateway.SystemIsReady()
void VMLine.SignalGateway.ModbusGateway.ModbusGateway.SystemIsNotReady()
void VMLine.SignalGateway.ModbusGateway.ModbusGateway.NewProductionImage(VMLine.Interfaces.PublishImageEvent)
void VMLine.SignalGateway.ModbusGateway.ModbusGateway.NewCaptureImage(VMLine.Interfaces.PublishImageEvent)
Task<VMLine.Interfaces.ISignalGateway> VMLine.SignalGateway.ProfinetGateway.ProfinetGateway.Initialize(VMLine.Interfaces.ISignalGatewayListener)
void VMLine.SignalGateway.ProfinetGateway.ProfinetGateway.ProfinetGateway(VMLine.Domain.SignalGatewaySettings)
void VMLine.SignalGateway.ProfinetGateway.ProfinetGateway.MonitoringMain()
void VMLine.SignalGateway.ProfinetGateway.ProfinetGateway.PLCStatusBitChanged(VMLine.SignalGateway.ProfinetGateway.ProfinetGateway.PLCStatusBits, bool)
void VMLine.SignalGateway.ProfinetGateway.ProfinetGateway.ResultReady(VMLine.Domain.Result)
void VMLine.SignalGateway.ProfinetGateway.ProfinetGateway.SystemIsReady()
void VMLine.SignalGateway.ProfinetGateway.ProfinetGateway.Dispose()
void VMLine.SignalGateway.ProfinetGateway.ProfinetGateway.NewProductionImage(VMLine.Interfaces.PublishImageEvent)
void VMLine.SignalGateway.ProfinetGateway.ProfinetGateway.NewCaptureImage(VMLine.Interfaces.PublishImageEvent)
void VMLine.SignalGateway.ProfinetGateway.ProfinetGateway.StateChanged(VMLine.Interfaces.State)
void VMLine.GUI.Login.UnitTest.LoginViewModelTests.IfEnableLogoutButton_EnableLogoutVisibilityInViewModelShouldBeTrue()
